 
:: initializing oneAPI environment ...
   slurm_script: BASH_VERSION = 4.4.20(1)-release
   args: Using "$@" for setvars.sh arguments: 
:: advisor -- latest
:: ccl -- latest
:: clck -- latest
:: compiler -- latest
:: dal -- latest
:: debugger -- latest
:: dev-utilities -- latest
:: dnnl -- latest
:: dpcpp-ct -- latest
:: dpl -- latest
:: inspector -- latest
:: ipp -- latest
:: ippcp -- latest
:: ipp -- latest
:: itac -- latest
:: mkl -- latest
:: mpi -- latest
:: tbb -- latest
:: vtune -- latest
:: oneAPI environment initialized ::
 
job start time is Thu Dec 5 09:04:51 -05 2024
+ srun -N1 -n1 --cpu_bind=cores -l --nodelist=gn03 --cpus-per-task=96 singularity exec --nv -B /home/urso -B /scratch --pwd /home/urso/PavicHDR/logs /home/urso/.lico/container/Python.sif bash /home/urso/PavicHDR/test.sh
0: /home/urso/PavicHDR/test.py:48: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
0:   model.load_state_dict(torch.load(f"{args.ckpt}")['state_dict'])
0: >>>>>>>>> Start Testing >>>>>>>>>
0: Load weights from:  /home/urso/PavicHDR/runs/train_2/best_checkpoint.pth
0: 2000
0: cuda:0
0: 15
0: Traceback (most recent call last):
0:   File "/home/urso/PavicHDR/venv/lib/python3.11/site-packages/numpy/_core/fromnumeric.py", line 57, in _wrapfunc
0:     return bound(*args, **kwds)
0:            ^^^^^^^^^^^^^^^^^^^^
0: TypeError: clip() received an invalid combination of arguments - got (float, float, out=NoneType), but expected one of:
0:  * (Tensor min = None, Tensor max = None)
0:  * (Number min = None, Number max = None)
0: 
0: 
0: During handling of the above exception, another exception occurred:
0: 
0: Traceback (most recent call last):
0:   File "/home/urso/PavicHDR/test.py", line 125, in <module>
0:     main()
0:   File "/home/urso/PavicHDR/test.py", line 88, in main
0:     pred_img = np.clip(pred_img * 255.0, 0., 255.).transpose(1, 2, 0)
0:                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0:   File "/home/urso/PavicHDR/venv/lib/python3.11/site-packages/numpy/_core/fromnumeric.py", line 2341, in clip
0:     return _wrapfunc(a, 'clip', a_min, a_max, out=out, **kwargs)
0:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0:   File "/home/urso/PavicHDR/venv/lib/python3.11/site-packages/numpy/_core/fromnumeric.py", line 66, in _wrapfunc
0:     return _wrapit(obj, method, *args, **kwds)
0:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0:   File "/home/urso/PavicHDR/venv/lib/python3.11/site-packages/numpy/_core/fromnumeric.py", line 42, in _wrapit
0:     conv = _array_converter(obj)
0:            ^^^^^^^^^^^^^^^^^^^^^
0:   File "/home/urso/PavicHDR/venv/lib/python3.11/site-packages/torch/_tensor.py", line 1149, in __array__
0:     return self.numpy()
0:            ^^^^^^^^^^^^
0: TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
srun: error: gn03: task 0: Exited with exit code 1
+ set +x
job end time is Thu Dec 5 09:05:15 -05 2024
