 
:: initializing oneAPI environment ...
   slurm_script: BASH_VERSION = 4.4.20(1)-release
   args: Using "$@" for setvars.sh arguments: 
:: advisor -- latest
:: ccl -- latest
:: clck -- latest
:: compiler -- latest
:: dal -- latest
:: debugger -- latest
:: dev-utilities -- latest
:: dnnl -- latest
:: dpcpp-ct -- latest
:: dpl -- latest
:: inspector -- latest
:: ipp -- latest
:: ippcp -- latest
:: ipp -- latest
:: itac -- latest
:: mkl -- latest
:: mpi -- latest
:: tbb -- latest
:: vtune -- latest
:: oneAPI environment initialized ::
 
job start time is Thu Dec 5 08:28:38 -05 2024
+ srun -N1 -n1 --cpu_bind=cores -l --nodelist=gn03 --cpus-per-task=96 singularity exec --nv -B /home/urso -B /scratch --pwd /home/urso/PavicHDR/logs /home/urso/.lico/container/Python.sif bash /home/urso/PavicHDR/test.sh
0: /home/urso/PavicHDR/test.py:48: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
0:   model.load_state_dict(torch.load(f"{args.ckpt}")['state_dict'])
0: >>>>>>>>> Start Testing >>>>>>>>>
0: Load weights from:  /home/urso/PavicHDR/runs/train_2/best_checkpoint.pth
0: 2000
0: cuda:0
0: /home/urso/PavicHDR/test.py:75: DeprecationWarning: __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)
0:   label = np.clip(label * 255.0, 0., 255.).transpose(1, 2, 0)
0: /home/urso/PavicHDR/test.py:79: DeprecationWarning: __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)
0:   label_mu = np.clip(label_mu * 255.0, 0., 255.).transpose(1, 2, 0)
0:  0 | PSNR_mu: 50.5890  PSNR_l: 55.0483 | SSIM_mu: 0.9976  SSIM_l: 0.9997 Seconds: 2.431994676589966
0:  1 | PSNR_mu: 45.2486  PSNR_l: 59.8476 | SSIM_mu: 0.9936  SSIM_l: 0.9998 Seconds: 1.2259228229522705
0:  2 | PSNR_mu: 48.2581  PSNR_l: 45.0553 | SSIM_mu: 0.9971  SSIM_l: 0.9994 Seconds: 1.4218389987945557
0:  3 | PSNR_mu: 41.6493  PSNR_l: 42.3013 | SSIM_mu: 0.9813  SSIM_l: 0.9980 Seconds: 1.3725709915161133
0:  4 | PSNR_mu: 42.5332  PSNR_l: 44.0205 | SSIM_mu: 0.9906  SSIM_l: 0.9972 Seconds: 1.4169425964355469
0:  5 | PSNR_mu: 40.8251  PSNR_l: 33.3402 | SSIM_mu: 0.9835  SSIM_l: 0.9936 Seconds: 1.2236318588256836
0:  6 | PSNR_mu: 39.8421  PSNR_l: 27.1229 | SSIM_mu: 0.9841  SSIM_l: 0.9596 Seconds: 1.3808815479278564
0:  7 | PSNR_mu: 35.9480  PSNR_l: 22.7166 | SSIM_mu: 0.9920  SSIM_l: 0.9607 Seconds: 1.212686538696289
0:  8 | PSNR_mu: 42.1805  PSNR_l: 29.1796 | SSIM_mu: 0.9915  SSIM_l: 0.9651 Seconds: 1.4316649436950684
0:  9 | PSNR_mu: 36.3178  PSNR_l: 23.3024 | SSIM_mu: 0.9884  SSIM_l: 0.9499 Seconds: 1.5669572353363037
0:  10 | PSNR_mu: 43.8299  PSNR_l: 35.9103 | SSIM_mu: 0.9963  SSIM_l: 0.9950 Seconds: 1.4072134494781494
0:  11 | PSNR_mu: 48.2906  PSNR_l: 45.2701 | SSIM_mu: 0.9971  SSIM_l: 0.9994 Seconds: 1.467095136642456
0:  12 | PSNR_mu: 52.0135  PSNR_l: 64.8835 | SSIM_mu: 0.9982  SSIM_l: 0.9999 Seconds: 1.5431466102600098
0:  13 | PSNR_mu: 42.4305  PSNR_l: 43.2610 | SSIM_mu: 0.9906  SSIM_l: 0.9971 Seconds: 1.5531420707702637
0:  14 | PSNR_mu: 43.0108  PSNR_l: 40.4761 | SSIM_mu: 0.9864  SSIM_l: 0.9976 Seconds: 1.4964401721954346
0: Average PSNR_mu: 43.5311  PSNR_l: 40.7824
0: Average SSIM_mu: 0.9912  SSIM_l: 0.9875
0: Average time 1.4768086433410645
0: >>>>>>>>> Finish Testing >>>>>>>>>
+ set +x
job end time is Thu Dec 5 08:30:26 -05 2024
